// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.1
// source: transfile.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head map[string]string `protobuf:"bytes,1,rep,name=head,proto3" json:"head,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data []byte            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_transfile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_transfile_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetHead() map[string]string {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Data) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_transfile_proto protoreflect.FileDescriptor

var file_transfile_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x04, 0x68,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x81, 0x01,
	0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x37, 0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x15, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x28, 0x01, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x61, 0x6c, 0x69, 0x61, 0x6e, 0x7a, 0x68, 0x75, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x69, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_transfile_proto_rawDescOnce sync.Once
	file_transfile_proto_rawDescData = file_transfile_proto_rawDesc
)

func file_transfile_proto_rawDescGZIP() []byte {
	file_transfile_proto_rawDescOnce.Do(func() {
		file_transfile_proto_rawDescData = protoimpl.X.CompressGZIP(file_transfile_proto_rawDescData)
	})
	return file_transfile_proto_rawDescData
}

var file_transfile_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_transfile_proto_goTypes = []interface{}{
	(*Data)(nil), // 0: transfile.proto.Data
	nil,          // 1: transfile.proto.Data.HeadEntry
}
var file_transfile_proto_depIdxs = []int32{
	1, // 0: transfile.proto.Data.head:type_name -> transfile.proto.Data.HeadEntry
	0, // 1: transfile.proto.TranFileAgent.Put:input_type -> transfile.proto.Data
	0, // 2: transfile.proto.TranFileAgent.Get:input_type -> transfile.proto.Data
	0, // 3: transfile.proto.TranFileAgent.Put:output_type -> transfile.proto.Data
	0, // 4: transfile.proto.TranFileAgent.Get:output_type -> transfile.proto.Data
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_transfile_proto_init() }
func file_transfile_proto_init() {
	if File_transfile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transfile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transfile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transfile_proto_goTypes,
		DependencyIndexes: file_transfile_proto_depIdxs,
		MessageInfos:      file_transfile_proto_msgTypes,
	}.Build()
	File_transfile_proto = out.File
	file_transfile_proto_rawDesc = nil
	file_transfile_proto_goTypes = nil
	file_transfile_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TranFileAgentClient is the client API for TranFileAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TranFileAgentClient interface {
	Put(ctx context.Context, opts ...grpc.CallOption) (TranFileAgent_PutClient, error)
	Get(ctx context.Context, opts ...grpc.CallOption) (TranFileAgent_GetClient, error)
}

type tranFileAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewTranFileAgentClient(cc grpc.ClientConnInterface) TranFileAgentClient {
	return &tranFileAgentClient{cc}
}

func (c *tranFileAgentClient) Put(ctx context.Context, opts ...grpc.CallOption) (TranFileAgent_PutClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TranFileAgent_serviceDesc.Streams[0], "/transfile.proto.TranFileAgent/Put", opts...)
	if err != nil {
		return nil, err
	}
	x := &tranFileAgentPutClient{stream}
	return x, nil
}

type TranFileAgent_PutClient interface {
	Send(*Data) error
	Recv() (*Data, error)
	grpc.ClientStream
}

type tranFileAgentPutClient struct {
	grpc.ClientStream
}

func (x *tranFileAgentPutClient) Send(m *Data) error {
	return x.ClientStream.SendMsg(m)
}

func (x *tranFileAgentPutClient) Recv() (*Data, error) {
	m := new(Data)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tranFileAgentClient) Get(ctx context.Context, opts ...grpc.CallOption) (TranFileAgent_GetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TranFileAgent_serviceDesc.Streams[1], "/transfile.proto.TranFileAgent/Get", opts...)
	if err != nil {
		return nil, err
	}
	x := &tranFileAgentGetClient{stream}
	return x, nil
}

type TranFileAgent_GetClient interface {
	Send(*Data) error
	Recv() (*Data, error)
	grpc.ClientStream
}

type tranFileAgentGetClient struct {
	grpc.ClientStream
}

func (x *tranFileAgentGetClient) Send(m *Data) error {
	return x.ClientStream.SendMsg(m)
}

func (x *tranFileAgentGetClient) Recv() (*Data, error) {
	m := new(Data)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TranFileAgentServer is the server API for TranFileAgent service.
type TranFileAgentServer interface {
	Put(TranFileAgent_PutServer) error
	Get(TranFileAgent_GetServer) error
}

// UnimplementedTranFileAgentServer can be embedded to have forward compatible implementations.
type UnimplementedTranFileAgentServer struct {
}

func (*UnimplementedTranFileAgentServer) Put(TranFileAgent_PutServer) error {
	return status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedTranFileAgentServer) Get(TranFileAgent_GetServer) error {
	return status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterTranFileAgentServer(s *grpc.Server, srv TranFileAgentServer) {
	s.RegisterService(&_TranFileAgent_serviceDesc, srv)
}

func _TranFileAgent_Put_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TranFileAgentServer).Put(&tranFileAgentPutServer{stream})
}

type TranFileAgent_PutServer interface {
	Send(*Data) error
	Recv() (*Data, error)
	grpc.ServerStream
}

type tranFileAgentPutServer struct {
	grpc.ServerStream
}

func (x *tranFileAgentPutServer) Send(m *Data) error {
	return x.ServerStream.SendMsg(m)
}

func (x *tranFileAgentPutServer) Recv() (*Data, error) {
	m := new(Data)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _TranFileAgent_Get_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TranFileAgentServer).Get(&tranFileAgentGetServer{stream})
}

type TranFileAgent_GetServer interface {
	Send(*Data) error
	Recv() (*Data, error)
	grpc.ServerStream
}

type tranFileAgentGetServer struct {
	grpc.ServerStream
}

func (x *tranFileAgentGetServer) Send(m *Data) error {
	return x.ServerStream.SendMsg(m)
}

func (x *tranFileAgentGetServer) Recv() (*Data, error) {
	m := new(Data)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _TranFileAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transfile.proto.TranFileAgent",
	HandlerType: (*TranFileAgentServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Put",
			Handler:       _TranFileAgent_Put_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Get",
			Handler:       _TranFileAgent_Get_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "transfile.proto",
}
